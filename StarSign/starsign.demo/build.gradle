/*
* This build file was auto generated by running the Gradle 'init' task
* by 'psyken' at '14. 3. 5 ���� 3:46' with Gradle 1.11
*
* This generated file contains a sample Java project to get you started.
* For more details take a look at the Java Quickstart chapter in the Gradle
* user guide available at http://gradle.org/docs/1.11/userguide/tutorial_java_projects.html
*/

// Apply the java plugin to add support for Java
buildscript {
    repositories {
        jcenter()
    }
 
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
		classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5.1'
    }
}

apply plugin: 'java'

// eclipse required war
apply from: 'gradle/war.gradle'
apply from: 'gradle/eclipse.gradle'
apply from: 'gradle/tomcat.gradle'
apply from: 'gradle/jboss.gradle'


// JAVA Version 1.6
sourceCompatibility = 1.6

// use Maven Central repositories
repositories {
   mavenCentral()
   flatDir {
        dirs 'lib'
    }
}

// dependency version information
def version = [
	spring: '3.2.2.RELEASE'
	, junit: '4.11'
	, servletApi: '3.0.1'
	, jstl: '1.2'
	, slf4j: '1.7.6'
	, mockito: '1.9.0'
	, cglib: '2.2.2'
	, logback: '1.0.6'
	, aspectjtool: '1.7.2'
]

// In this section you declare the dependencies for your production and test code
dependencies {
	// Spring
	compile	"org.springframework:spring-webmvc:${version.spring}",
			"org.springframework:spring-jdbc:${version.spring}",
			"org.springframework:spring-orm:${version.spring}",
			"org.springframework:spring-orm:${version.spring}"
	
	// iBatis
	compile	"org.apache.ibatis:ibatis-sqlmap:2.3.4.726"
			
	// Spring Secuirty
	compile	"org.springframework.security:spring-security-acl:${version.spring}",
			"org.springframework.security:spring-security-cas-client:3.0.8.RELEASE",
			"org.springframework.security:spring-security-config:${version.spring}",
			"org.springframework.security:spring-security-core:${version.spring}",
			"org.springframework.security:spring-security-web:${version.spring}",
			"org.springframework.security:spring-security-taglibs:${version.spring}"
	
	// Common
	compile	"commons-fileupload:commons-fileupload:1.3.1",
			"commons-dbcp:commons-dbcp:1.4"
	
	// Logging
	compile	"org.logback-extensions:logback-ext-spring:0.1.1",
			"org.slf4j:slf4j-api:${version.slf4j}",
			"ch.qos.logback:logback-classic:${version.logback}"
	
	// CG LIB
	compile	"cglib:cglib-nodep:${version.cglib}"
	
	// JSON
	compile	"org.codehaus.jackson:jackson-mapper-asl:1.9.13"
	
	// UI - Tiles
	compile	"org.apache.tiles:tiles-core:2.1.4",
			"org.apache.tiles:tiles-jsp:2.1.4",
			"org.apache.tiles:tiles-api:2.1.4",
			"org.aspectj:aspectjtools:${version.aspectjtool}"
	
	// JQuery
	compile	"org.webjars:jquery:2.1.1",
			"org.webjars:jqgrid:4.6.0",
			"org.webjars:jquery-ui:1.11.1"
	//"com.googlecode.wicket-jquery-ui:wicket-jquery-ui-theme-smoothness:7.0.0-M3"
	

	compile files("lib/ojdbc14.jar")		

	providedCompile "javax.servlet:javax.servlet-api:${version.servletApi}"

	testCompile	"org.springframework:spring-test:${version.spring}",
				"junit:junit:${version.junit}",
				"org.mockito:mockito-core:${version.mockito}"
										
	runtime "javax.servlet:jstl:${version.jstl}"
}

// exclude commons-logging for logback(slf4j)
[configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')

// encoding setting when java compile
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// unit test setting
test {
	jvmArgs = ['-ea', '-Xmx256m']
	logging.captureStandardOutput(LogLevel.INFO)
	testReport = false
}

// ������Ʈ �ʱ�ȭ
// 1. java source directory �� : src/main/java, src/test/java
// 2. resource directory ��    : src/main/resource, src/test/resource
// 3. web source directory ��  : src/main/webapp, src/main/webapp/WEB-INF
task initProject(description: 'initialize project') << {
	createDir = {
		println "create source directory: $it"
		it.mkdirs()
	}
	sourceSets*.java.srcDirs*.each createDir
	sourceSets*.resources.srcDirs*.each createDir
	createDir webAppDir
	createDir new File(webAppDir, '/WEB-INF')
	
}
